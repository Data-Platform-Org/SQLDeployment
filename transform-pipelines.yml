# Transform pipeline
# To demonstrate how you can transform SQL Pools
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml


variables:
  configuration: release
  sqlinstance: localhost
  database: UnitTesting
  azuredatabase: Azure-Data
  artifactname: Database
  azureartifactname: AzureSQLDB
  azuremidatabase: AzureSQLMI
  miartifactname: AzureSQLMI
  azuresyn2database: AzureSQLPool2
  sqlpool2artifactname: AzureSQLPool2

stages:

# Transform stage for AzurePool2
- stage: TransformandBuild
  dependsOn: Integration
  displayName: 'Transform & Build'
  variables:
    variables:
    agentpool: 'Azure DevOps Duet'
    poolstagingarea: $(Build.ArtifactStagingDirectory)\pool2staging
    sourcepath: $(database)-Data

  pool: $(agentpool)

  jobs:
    - job: 'TransformAzureSQLPool2'
      displayName: 'Transform Tables for AzurePool2'
      variables:
        variables:
        tablesfolder: pool2staging\$(sourcepath)\Tables

      steps:

      - task: CopyFiles@2
        displayName: "Copy files to staging area for SQL Pool"
        # Copies the file to a sub folder in the artifacts directory
        inputs:
          Contents: |
            $(sourcepath)\**
          TargetFolder: '$(poolstagingarea)'
          FlattenFolders: false
          OverWrite: true

      - task: PowerShell@2
        displayName: "Runs PowerShell to add Hash distribution"
        # Adds Hash distribution to Table 1
        inputs:
          targetType: 'inline'
          script: |
            # Write your PowerShell commands here.
            
            cd..
            cd a
            ls
            cd $(tablesfolder)
            ls
           
            $Old_end = '\);'
            $New_end = ') WITH (DISTRIBUTION = HASH (Column1), CLUSTERED COLUMNSTORE INDEX);'
            $New_end
                       
            (Get-Content "Table1.sql") -replace $Old_end, $New_end  | Set-Content "Table1.sql" 

      - task: PowerShell@2
        displayName: "Runs PowerShell to replace DSP"
        # Renames the .sqlproj file
        # Followed by the PowerShell to replace the Database Schema Provider
        inputs:
          targetType: 'inline'
          script: |
            # Write your PowerShell commands here.
            
            cd..
            cd a
            cd pool2staging\$(database)-Data
           
            $Old_DSP = 'Microsoft.Data.Tools.Schema.Sql.Sql140DatabaseSchemaProvider'
            $New_DSP = 'Microsoft.Data.Tools.Schema.Sql.SqlDwDatabaseSchemaProvider'
            
            rename-item UnitTesting-Data.sqlproj AzureSQLPool2.sqlproj
            rename-item UnitTesting-Data.publish.xml AzureSQLPool2.publish.xml
            
            (Get-Content "AzureSQLPool2.sqlproj") -replace $Old_DSP, $New_DSP  | Set-Content "AzureSQLPool2.sqlproj"

      - task: VSBuild@1
        displayName: 'Build Azure-Data project'
        # Builds the specific project using the renamed .sqlproj file
        inputs:
          solution: $(poolstagingarea)/$(database)-Data/AzureSQLPool2.sqlproj
          configuration: $(configuration)

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Azure SQL database artifact'
        # Publishes the dacpac as part of an artifact within Azure DevOps
        inputs:
          PathtoPublish: '$(poolstagingarea)\$(database)-Data\bin\$(configuration)'
          ArtifactName: $(sqlpool2artifactname)
          publishLocation: 'Container'